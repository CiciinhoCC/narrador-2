{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport StoryCard from \"./StoryCard\";\nimport * as Font from \"expo-font\";\nimport * as SplashScreen from 'expo-splash-screen';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nSplashScreen.preventAutoHideAsync();\nvar customFonts = {\n  \"Bubblegum-Sans\": require(\"../assets/fonts/BubblegumSans-Regular.ttf\")\n};\nvar stories = require(\"./temp_stories.json\");\nvar Feed = function (_Component) {\n  _inherits(Feed, _Component);\n  var _super = _createSuper(Feed);\n  function Feed(props) {\n    var _this;\n    _classCallCheck(this, Feed);\n    _this = _super.call(this, props);\n    _this.renderItem = function (_ref) {\n      var story = _ref.item;\n      return _jsx(StoryCard, {\n        story: story\n      });\n    };\n    _this.keyExtractor = function (item, index) {\n      return index.toString();\n    };\n    _this.state = {\n      fontsLoaded: false\n    };\n    return _this;\n  }\n  _createClass(Feed, [{\n    key: \"_loadFontsAsync\",\n    value: function () {\n      var _loadFontsAsync2 = _asyncToGenerator(function* () {\n        yield Font.loadAsync(customFonts);\n        this.setState({\n          fontsLoaded: true\n        });\n      });\n      function _loadFontsAsync() {\n        return _loadFontsAsync2.apply(this, arguments);\n      }\n      return _loadFontsAsync;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._loadFontsAsync();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.fontsLoaded) {\n        SplashScreen.hideAsync();\n        return _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(SafeAreaView, {\n            style: styles.droidSafeArea\n          }), _jsxs(View, {\n            style: styles.appTitle,\n            children: [_jsx(View, {\n              style: styles.appIcon,\n              children: _jsx(Image, {\n                source: require(\"../assets/logo.png\"),\n                style: styles.iconImage\n              })\n            }), _jsx(View, {\n              style: styles.appTitleTextContainer,\n              children: _jsx(Text, {\n                style: styles.appTitleText,\n                children: \"Storytelling App\"\n              })\n            })]\n          }), _jsx(View, {\n            style: styles.cardContainer,\n            children: _jsx(FlatList, {\n              keyExtractor: this.keyExtractor,\n              data: stories,\n              renderItem: this.renderItem\n            })\n          })]\n        });\n      }\n    }\n  }]);\n  return Feed;\n}(Component);\nexport { Feed as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#15193c\"\n  },\n  droidSafeArea: {\n    marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : RFValue(35)\n  },\n  appTitle: {\n    flex: 0.07,\n    flexDirection: \"row\"\n  },\n  appIcon: {\n    flex: 0.3,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  iconImage: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\"\n  },\n  appTitleTextContainer: {\n    flex: 0.7,\n    justifyContent: \"center\"\n  },\n  appTitleText: {\n    color: \"white\",\n    fontSize: RFValue(28),\n    fontFamily: \"Bubblegum-Sans\"\n  },\n  cardContainer: {\n    flex: 0.93\n  }\n});","map":{"version":3,"names":["React","Component","View","Text","StyleSheet","SafeAreaView","Platform","StatusBar","Image","FlatList","RFValue","StoryCard","Font","SplashScreen","jsx","_jsx","jsxs","_jsxs","preventAutoHideAsync","customFonts","require","stories","Feed","_Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","renderItem","_ref","story","item","keyExtractor","index","toString","state","fontsLoaded","_createClass","key","value","_loadFontsAsync2","_asyncToGenerator","loadAsync","setState","_loadFontsAsync","apply","arguments","componentDidMount","render","hideAsync","style","styles","container","children","droidSafeArea","appTitle","appIcon","source","iconImage","appTitleTextContainer","appTitleText","cardContainer","data","default","create","flex","backgroundColor","marginTop","OS","currentHeight","flexDirection","justifyContent","alignItems","width","height","resizeMode","color","fontSize","fontFamily"],"sources":["C:/Users/Fabio/Downloads/Grande Cição/VS code/narrador-2/screens/Feed.js"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  StyleSheet,\r\n  SafeAreaView,\r\n  Platform,\r\n  StatusBar,\r\n  Image,\r\n  FlatList\r\n} from \"react-native\";\r\nimport { RFValue } from \"react-native-responsive-fontsize\";\r\nimport StoryCard from \"./StoryCard\";\r\n\r\nimport * as Font from \"expo-font\";\r\nimport * as SplashScreen from 'expo-splash-screen';\r\n\r\nSplashScreen.preventAutoHideAsync();\r\n\r\nlet customFonts = {\r\n  \"Bubblegum-Sans\": require(\"../assets/fonts/BubblegumSans-Regular.ttf\")\r\n};\r\n\r\nlet stories = require(\"./temp_stories.json\");\r\n\r\nexport default class Feed extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fontsLoaded: false\r\n    };\r\n  }\r\n\r\n  async _loadFontsAsync() {\r\n    await Font.loadAsync(customFonts);\r\n    this.setState({ fontsLoaded: true });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._loadFontsAsync();\r\n  }\r\n\r\n  renderItem = ({ item: story }) => {\r\n    return <StoryCard story={story} />;\r\n  };\r\n\r\n  keyExtractor = (item, index) => index.toString();\r\n\r\n  render() {\r\n    if (this.state.fontsLoaded) {\r\n      SplashScreen.hideAsync();\r\n      return (\r\n        <View style={styles.container}>\r\n          <SafeAreaView style={styles.droidSafeArea} />\r\n          <View style={styles.appTitle}>\r\n            <View style={styles.appIcon}>\r\n              <Image\r\n                source={require(\"../assets/logo.png\")}\r\n                style={styles.iconImage}\r\n              ></Image>\r\n            </View>\r\n            <View style={styles.appTitleTextContainer}>\r\n              <Text style={styles.appTitleText}>Storytelling App</Text>\r\n            </View>\r\n          </View>\r\n          <View style={styles.cardContainer}>\r\n            <FlatList\r\n              keyExtractor={this.keyExtractor}\r\n              data={stories}\r\n              renderItem={this.renderItem}\r\n            />\r\n          </View>\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#15193c\"\r\n  },\r\n  droidSafeArea: {\r\n    marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : RFValue(35)\r\n  },\r\n  appTitle: {\r\n    flex: 0.07,\r\n    flexDirection: \"row\"\r\n  },\r\n  appIcon: {\r\n    flex: 0.3,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\"\r\n  },\r\n  iconImage: {\r\n    width: \"100%\",\r\n    height: \"100%\",\r\n    resizeMode: \"contain\"\r\n  },\r\n  appTitleTextContainer: {\r\n    flex: 0.7,\r\n    justifyContent: \"center\"\r\n  },\r\n  appTitleText: {\r\n    color: \"white\",\r\n    fontSize: RFValue(28),\r\n    fontFamily: \"Bubblegum-Sans\"\r\n  },\r\n  cardContainer: {\r\n    flex: 0.93\r\n  }\r\n});\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}