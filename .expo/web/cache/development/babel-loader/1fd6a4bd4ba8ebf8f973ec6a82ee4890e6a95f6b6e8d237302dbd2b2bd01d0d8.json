{"ast":null,"code":"import { isIphoneX } from \"react-native-iphone-x-helper\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nexport function RFPercentage(percent) {\n  var _Dimensions$get = Dimensions.get(\"window\"),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n  var standardLength = width > height ? width : height;\n  var offset = width > height ? 0 : Platform.OS === \"ios\" ? 78 : StatusBar.currentHeight;\n  var deviceHeight = isIphoneX() || Platform.OS === \"android\" ? standardLength - offset : standardLength;\n  var heightPercent = percent * deviceHeight / 100;\n  return Math.round(heightPercent);\n}\nexport function RFValue(fontSize) {\n  var standardScreenHeight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 680;\n  var _Dimensions$get2 = Dimensions.get(\"window\"),\n    height = _Dimensions$get2.height,\n    width = _Dimensions$get2.width;\n  var standardLength = width > height ? width : height;\n  var offset = width > height ? 0 : Platform.OS === \"ios\" ? 78 : StatusBar.currentHeight;\n  var deviceHeight = isIphoneX() || Platform.OS === \"android\" ? standardLength - offset : standardLength;\n  var heightPercent = fontSize * deviceHeight / standardScreenHeight;\n  return Math.round(heightPercent);\n}","map":{"version":3,"names":["isIphoneX","Platform","StatusBar","Dimensions","RFPercentage","percent","_Dimensions$get","get","height","width","standardLength","offset","OS","currentHeight","deviceHeight","heightPercent","Math","round","RFValue","fontSize","standardScreenHeight","arguments","length","undefined","_Dimensions$get2"],"sources":["C:/Users/Fabio/Downloads/Grande Cição/VS code/narrador-2/node_modules/react-native-responsive-fontsize/index.js"],"sourcesContent":["import { isIphoneX } from \"react-native-iphone-x-helper\";\r\nimport { Platform, StatusBar, Dimensions } from \"react-native\";\r\n\r\nexport function RFPercentage(percent) {\r\n  const { height, width } = Dimensions.get(\"window\");\r\n  const standardLength = width > height ? width : height;\r\n  const offset =\r\n    width > height ? 0 : Platform.OS === \"ios\" ? 78 : StatusBar.currentHeight; // iPhone X style SafeAreaView size in portrait\r\n\r\n  const deviceHeight =\r\n    isIphoneX() || Platform.OS === \"android\"\r\n      ? standardLength - offset\r\n      : standardLength;\r\n\r\n  const heightPercent = (percent * deviceHeight) / 100;\r\n  return Math.round(heightPercent);\r\n}\r\n\r\n// guideline height for standard 5\" device screen is 680\r\nexport function RFValue(fontSize, standardScreenHeight = 680) {\r\n  const { height, width } = Dimensions.get(\"window\");\r\n  const standardLength = width > height ? width : height;\r\n  const offset =\r\n    width > height ? 0 : Platform.OS === \"ios\" ? 78 : StatusBar.currentHeight; // iPhone X style SafeAreaView size in portrait\r\n\r\n  const deviceHeight =\r\n    isIphoneX() || Platform.OS === \"android\"\r\n      ? standardLength - offset\r\n      : standardLength;\r\n\r\n  const heightPercent = (fontSize * deviceHeight) / standardScreenHeight;\r\n  return Math.round(heightPercent);\r\n}\r\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,8BAA8B;AAAC,OAAAC,QAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,UAAA;AAGzD,OAAO,SAASC,YAAYA,CAACC,OAAO,EAAE;EACpC,IAAAC,eAAA,GAA0BH,UAAU,CAACI,GAAG,CAAC,QAAQ,CAAC;IAA1CC,MAAM,GAAAF,eAAA,CAANE,MAAM;IAAEC,KAAK,GAAAH,eAAA,CAALG,KAAK;EACrB,IAAMC,cAAc,GAAGD,KAAK,GAAGD,MAAM,GAAGC,KAAK,GAAGD,MAAM;EACtD,IAAMG,MAAM,GACVF,KAAK,GAAGD,MAAM,GAAG,CAAC,GAAGP,QAAQ,CAACW,EAAE,KAAK,KAAK,GAAG,EAAE,GAAGV,SAAS,CAACW,aAAa;EAE3E,IAAMC,YAAY,GAChBd,SAAS,EAAE,IAAIC,QAAQ,CAACW,EAAE,KAAK,SAAS,GACpCF,cAAc,GAAGC,MAAM,GACvBD,cAAc;EAEpB,IAAMK,aAAa,GAAIV,OAAO,GAAGS,YAAY,GAAI,GAAG;EACpD,OAAOE,IAAI,CAACC,KAAK,CAACF,aAAa,CAAC;AAClC;AAGA,OAAO,SAASG,OAAOA,CAACC,QAAQ,EAA8B;EAAA,IAA5BC,oBAAoB,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,GAAG;EAC1D,IAAAG,gBAAA,GAA0BrB,UAAU,CAACI,GAAG,CAAC,QAAQ,CAAC;IAA1CC,MAAM,GAAAgB,gBAAA,CAANhB,MAAM;IAAEC,KAAK,GAAAe,gBAAA,CAALf,KAAK;EACrB,IAAMC,cAAc,GAAGD,KAAK,GAAGD,MAAM,GAAGC,KAAK,GAAGD,MAAM;EACtD,IAAMG,MAAM,GACVF,KAAK,GAAGD,MAAM,GAAG,CAAC,GAAGP,QAAQ,CAACW,EAAE,KAAK,KAAK,GAAG,EAAE,GAAGV,SAAS,CAACW,aAAa;EAE3E,IAAMC,YAAY,GAChBd,SAAS,EAAE,IAAIC,QAAQ,CAACW,EAAE,KAAK,SAAS,GACpCF,cAAc,GAAGC,MAAM,GACvBD,cAAc;EAEpB,IAAMK,aAAa,GAAII,QAAQ,GAAGL,YAAY,GAAIM,oBAAoB;EACtE,OAAOJ,IAAI,CAACC,KAAK,CAACF,aAAa,CAAC;AAClC"},"metadata":{},"sourceType":"module","externalDependencies":[]}